name: CI / SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  syntax-check:
    name: Build & Syntax Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and check syntax (skip tests & checkstyle)
        id: build
        run: |
          mvn verify -DskipTests -Dcheckstyle.skip=true -Dnohttp.checkstyle.skip=true -Dspring-javaformat.skip=true
        continue-on-error: true

      - name: Send Discord notification on failure
        if: steps.build.outcome != 'success'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: https://discord.com/api/webhooks/1373962801684676618/7mbjxZjYXVcUsiBEutRuLLeGEHvkVNoZ2hkmfqH_zipVql9diF1VT_66iiY3Va_5llyb
          title: "❌ Build Failed"
          description: "Syntax check failed in **${{ github.repository }}**"
          color: 0xff0000
          username: CI/CD Bot
          url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png

      - name: Exit with build status
        if: steps.build.outcome != 'success'
        run: exit 1

      - name: Upload target/ directory as artifact
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: mvn-target
          path: target/
          retention-days: 1

  sonar-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: syntax-check
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          name: mvn-target
          path: target/

      - name: Run SonarCloud Analysis
        id: sonarcloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          PROJECT_KEY="antnm-splus_java-web-small"
          echo "Using SonarCloud project key: $PROJECT_KEY"

          mvn -B verify sonar:sonar \
            -Dsonar.projectKey=$PROJECT_KEY \
            -Dsonar.projectName=spring-petclinic \
            -Dsonar.organization=antnm-splus \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dcheckstyle.skip=true \
            -Dnohttp.checkstyle.skip=true \
            -Dspring-javaformat.skip=true \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.scm.disabled=true
        continue-on-error: true

      - name: Get SonarCloud quality gate result
        id: quality_gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          PROJECT_KEY="antnm-splus_java-web-small"

          # Đợi để SonarCloud phân tích kết quả
          echo "Waiting for SonarCloud analysis to complete..."
          sleep 30

          # Lấy kết quả quality gate từ SonarCloud API
          echo "Fetching quality gate result for project $PROJECT_KEY"
          QG_RESULT=$(curl -s -u "${SONAR_TOKEN}:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=$PROJECT_KEY")

          # Lưu kết quả vào file
          echo "$QG_RESULT" > qg_result.json

          # In ra để debug
          echo "Quality Gate Result:"
          cat qg_result.json

          # Check if result contains errors
          if echo "$QG_RESULT" | grep -q "errors"; then
            echo "Error in SonarCloud API response"
            echo "status=ERROR" >> $GITHUB_OUTPUT
            echo "details=Failed to get quality gate status" >> $GITHUB_OUTPUT
            echo "passed_count=0" >> $GITHUB_OUTPUT
            echo "failed_count=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Trích xuất trạng thái quality gate và đặt làm output
          QG_STATUS=$(echo "$QG_RESULT" | jq -r '.projectStatus.status')
          echo "status=$QG_STATUS" >> $GITHUB_OUTPUT

          # Kiểm tra conditions có tồn tại không
          if echo "$QG_RESULT" | jq -e '.projectStatus.conditions' > /dev/null; then
            # Trích xuất conditions để hiển thị chi tiết
            CONDITIONS=$(echo "$QG_RESULT" | jq -c '.projectStatus.conditions')
            echo "conditions=$CONDITIONS" >> $GITHUB_OUTPUT
            
            # Đếm số lượng điều kiện thành công và thất bại
            PASSED_COUNT=$(echo "$QG_RESULT" | jq -r '.projectStatus.conditions[] | select(.status=="OK") | .status' | wc -l)
            FAILED_COUNT=$(echo "$QG_RESULT" | jq -r '.projectStatus.conditions[] | select(.status=="ERROR") | .status' | wc -l)
            echo "passed_count=$PASSED_COUNT" >> $GITHUB_OUTPUT
            echo "failed_count=$FAILED_COUNT" >> $GITHUB_OUTPUT
            
            # Tạo chi tiết cho Discord
            echo "details<<EOF" >> $GITHUB_OUTPUT
            
            echo "**All Quality Gate Conditions:**" >> $GITHUB_OUTPUT
            echo "$QG_RESULT" | jq -r '.projectStatus.conditions[] | "- \(.metricKey): \(.actualValue) (Required: \(.errorThreshold // "N/A")) [\(.status=="OK" && "✅" || "❌")]"' >> $GITHUB_OUTPUT
            
            echo "EOF" >> $GITHUB_OUTPUT
            
            # Lấy thêm các issues chính từ SonarCloud
            echo "Fetching main issues from SonarCloud..."
            ISSUES=$(curl -s -u "${SONAR_TOKEN}:" "https://sonarcloud.io/api/issues/search?projectKeys=$PROJECT_KEY&resolved=false&severities=BLOCKER,CRITICAL&ps=5")
            
            ISSUES_COUNT=$(echo "$ISSUES" | jq -r '.total')
            
            if [ "$ISSUES_COUNT" -gt 0 ]; then
              echo "main_issues<<EOF" >> $GITHUB_OUTPUT
              echo "$ISSUES" | jq -r '.issues[] | "- [\(.severity)] \(.message) (\(.component | split(":") | .[1]):\(.line // "N/A"))"' >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "main_issues=Không có issues chính" >> $GITHUB_OUTPUT
            fi
            
            # Lấy các metric chính
            echo "Fetching main metrics from SonarCloud..."
            METRICS=$(curl -s -u "${SONAR_TOKEN}:" "https://sonarcloud.io/api/measures/component?component=$PROJECT_KEY&metricKeys=bugs,vulnerabilities,code_smells,duplicated_lines_density,coverage")
            
            if echo "$METRICS" | jq -e '.component.measures' > /dev/null; then
              echo "metrics<<EOF" >> $GITHUB_OUTPUT
              echo "$METRICS" | jq -r '.component.measures[] | "- \(.metric): \(.value)"' >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "metrics=Không có dữ liệu metrics" >> $GITHUB_OUTPUT
            fi
            
          else
            echo "No quality gate conditions found"
            echo "conditions=[]" >> $GITHUB_OUTPUT
            echo "passed_count=0" >> $GITHUB_OUTPUT
            echo "failed_count=0" >> $GITHUB_OUTPUT
            echo "details=No quality gate conditions reported" >> $GITHUB_OUTPUT
          fi

      - name: Send Discord notification for SonarCloud
        if: steps.quality_gate.outputs.status != ''
        uses: sarisia/actions-status-discord@v1
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          webhook: ${DISCORD_WEBHOOK}
          title: "${{ steps.quality_gate.outputs.status == 'OK' && '✅ SonarCloud Quality Gate: SUCCESS' || '❌ SonarCloud Quality Gate: FAILED' }}"
          description: |
            Quality Gate Analysis for **${{ github.repository }}**
            ✅ Passed: ${{ steps.quality_gate.outputs.passed_count }}
            ❌ Failed: ${{ steps.quality_gate.outputs.failed_count }}
          color: "${{ steps.quality_gate.outputs.status == 'OK' && '0x00ff00' || '0xff0000' }}"
          username: SonarCloud Bot
          url: https://sonarcloud.io/dashboard?id=antnm-splus_java-web-small
          avatar_url: https://sonarcloud.io/apple-touch-icon-180x180.png
          nodetail: false
          content: |
            ### Quality Gate Details

            **All Conditions:**
            ${{ steps.quality_gate.outputs.details }}

            **Metrics Overview:**
            ${{ steps.quality_gate.outputs.metrics }}

            [View Full Report on SonarCloud](https://sonarcloud.io/dashboard?id=antnm-splus_java-web-small)

    continue-on-error: true
