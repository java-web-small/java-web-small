name: CI / SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  syntax-check:
    name: Build & Syntax Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and check syntax (skip tests & checkstyle)
        run: |
          mvn verify -DskipTests -Dcheckstyle.skip=true -Dnohttp.checkstyle.skip=true

      - name: Upload target/ directory as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mvn-target
          path: target/
          retention-days: 1

  sonar-analysis:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=java-web-small

      - name: Send Discord notification for SonarCloud
        if: always()
        uses: sarisia/actions-status-discord@v1
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          webhook: https://discord.com/api/webhooks/1373962801684676618/7mbjxZjYXVcUsiBEutRuLLeGEHvkVNoZ2hkmfqH_zipVql9diF1VT_66iiY3Va_5llyb
          title: "${{ steps.sonarcloud.outcome == 'success' && '✅ SonarCloud Quality Gate: SUCCESS' || '❌ SonarCloud Quality Gate: FAILED' }}"
          description: |
            Quality Gate Analysis for **${{ github.repository }}**
          fields: |
            [
              {
                "name": "Repository",
                "value": "${{ github.repository }}",
                "inline": true
              },
              {
                "name": "Ref",
                "value": "${{ github.event_name == 'pull_request' && format('refs/pull/{0}/merge', github.event.pull_request.number) || github.ref }}",
                "inline": true
              },
              {
                "name": "Event - ${{ github.event_name }}",
                "value": "${{ github.event_name == 'pull_request' && format('#{0} {1}', github.event.pull_request.number, github.event.pull_request.title) || github.event.head_commit.message }}"
              },
              {
                "name": "Triggered by",
                "value": "${{ github.actor }}",
                "inline": true
              },
              {
                "name": "Workflow",
                "value": "${{ github.workflow }}",
                "inline": true
              }
            ]
          color: "${{ steps.sonarcloud.outcome == 'success' && '0x00ff00' || '0xff0000' }}"
          username: SonarCloud Bot
          url: https://sonarcloud.io/dashboard?id=antnm-splus_java-web-small
          avatar_url: https://sonarcloud.io/apple-touch-icon-180x180.png

    continue-on-error: true
