name: CI / SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  syntax-check:
    name: Build & Syntax Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and check syntax (skip tests & checkstyle)
        run: |
          mvn verify -DskipTests -Dcheckstyle.skip=true -Dnohttp.checkstyle.skip=true

      - name: Upload target/ directory as artifact
        uses: actions/upload-artifact@v3
        with:
          name: mvn-target
          path: target/
          retention-days: 1

  # Job 2: SonarQube Analysis
  # sonar-analysis:
  #   name: SonarQube Analysis
  #   runs-on: ubuntu-latest
  #   needs: syntax-check # chạy sau khi job syntax-check hoàn thành
  #   if: github.event_name != 'pull_request' # (tùy chọn) chỉ chạy Sonar khi không phải PR, hoặc bạn có thể để luôn chạy

  #   steps:
  #     # 1. Checkout code với full history (để sonar phân tích đúng blame, commit history)
  #     - name: Checkout repository (full history)
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     # 2. Setup JDK 17 & Cache Maven lần nữa
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: "temurin"
  #         java-version: "17"
  #         cache: "maven"

  #     # 3. Tạo các thư mục .m2 và .sonar/cache (tương đương before_script)
  #     - name: Cache Maven packages
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.m2
  #         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: ${{ runner.os }}-m2

  #     - name: Cache SonarQube packages
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.sonar/cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: ${{ runner.os }}-sonar

  #     # 4. Download built artifacts
  #     - name: Download built artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: mvn-target
  #         path: target/

  #     # 5. SonarQube Scan
  #     - name: Run SonarQube
  #       env:
  #         # 2 biến môi trường dưới đây bạn phải tạo trong GitHub Repository → Settings → Secrets:
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       run: |
  #         mvn verify sonar:sonar \
  #           -Dsonar.projectKey=splus.cec_java-web-small_AZbnXVYG9fW_saT3QWxv \
  #           -Dsonar.host.url=$SONAR_HOST_URL \
  #           -Dsonar.login=$SONAR_TOKEN \
  #           -Dcheckstyle.skip=true \
  #           -Dnohttp.checkstyle.skip=true

  #   continue-on-error: true
